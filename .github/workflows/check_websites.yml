name: Check websites for changes

on:
  workflow_call:
    inputs:
      csv-path:
        required: true
        type: string
    secrets:
      MS_TEAMS_WEBHOOK_URL:
        required: true
jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3

      - id: set-matrix
        env:
           CSV_PATH: ${{ inputs.csv-path }}
        run: |
          matrix=$(./workflow/matrix.sh $CSV_PATH | jq -c '.')
          echo $matrix
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  notify:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix: ${{fromJSON(needs.build-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3
          if [ "${{ matrix.type }}" = "dynamic" ] ; then
                sudo apt-get update
                sudo apt-get install chromium-browser
          fi
      
      - name: Check website
        id: website
        run: |
          echo "URL: ${{ matrix.url }}, selector: ${{ matrix.selector }}"
          mkdir text
          matches=$(./lib/website_hash.py -u "${{ matrix.url }}" -f "hashes/${{ matrix.slug }}.txt" -s "${{ matrix.selector }}" -t "${{ matrix.type }}" -o text/${{ matrix.slug }}.txt --verbose)
          echo $matches
          echo "matches=$matches" >> $GITHUB_OUTPUT
          
      - name: Were there any matches?
        run: |
          echo "Matches: ${{ steps.website.outputs.matches }}"

      - name: Notify telegram about website changes
        if: steps.website.outputs.matches != ''
        uses: chrisdleech-pol/github-action-notify-teams@v1.0.0
        with: 
          TEAMS_URI: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
          TEAMS_MSG_TITLE: "ðŸŸ¢ Website hat Ã„nderungen: [${{matrix.label }}](${{ matrix.url }})"
          TEAMS_MSG_SUMMARY: ${{ steps.website.outputs.matches }}
          TEAMS_MSG_TYPE: "success"
            
      - name: Note error for later
        if: ${{ failure() }}
        run: |
          mkdir error_counts
          touch error_counts/${{ matrix.slug }}.txt
      
      - name: Notify telegram failure
        if: ${{ failure()  && matrix.error_count > 3 }}
        uses: chrisdleech-pol/github-action-notify-teams@v1.0.0
        with: 
          TEAMS_URI: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
          TEAMS_MSG_TITLE: "ðŸ”´ [Website-Check fÃ¼r Â«${{ matrix.label }}Â» fehlgeschlagen](https://github.com/metaodi/website-keyword-monitor/actions/runs/${{ github.run_id }}?check_suite_focus=true)"
          TEAMS_MSG_SUMMARY: 
          TEAMS_MSG_TYPE: "failure"
            
      
      - name: Upload hash as artifact
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: hashes
          path: |
            text
            error_counts
  
  update_hashes:
    needs: notify
    if: always()
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install sqlite3

      - name: Populate database
        env:
           CSV_PATH: ${{ inputs.csv-path }}
        run: ./workflow/populate_database.sh $CSV_PATH

      - name: Download hashes
        uses: actions/download-artifact@v3
        with:
          name: hashes
          path: hashes

      - name: Update hashes and error counts
        run: ./workflow/update_from_artifacts.sh
      
      - name: Export database
        env:
           CSV_PATH: ${{ inputs.csv-path }}
        run: ./workflow/export_database_to_csv.sh $CSV_PATH
          
      - name: Check if there are changes in the repo
        run: |
            git status --porcelain
            if [[ -z $(git status --porcelain) ]];
            then
              echo "Repo is clean"
              echo "changed=0" >> $GITHUB_OUTPUT
            else
              echo "Repo is dirty"
              echo "changed=1" >> $GITHUB_OUTPUT
            fi
        id: changes
         
      - name: Commit and push to repo
        if: steps.changes.outputs.changed == 1 # only try to commit if there are actually changes and this is run on main
        uses: github-actions-x/commit@v2.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          push-branch: ${{ github.ref_name }}
          name: GitHub Action Bot
          email: website-monitor@metaodi.ch
          commit-message: Update ${{ inputs.csv-path }} with updated hashes
          rebase: 'true'

      - name: Notify telegram failure
        if: ${{ failure()  || cancelled() }}
        uses: chrisdleech-pol/github-action-notify-teams@v1.0.0
        with: 
          TEAMS_URI: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
          TEAMS_MSG_TITLE: "ðŸ”´ [Website Checker Job fehlgeschlagen](https://github.com/metaodi/website-keyword-monitor/actions/runs/${{ github.run_id }}?check_suite_focus=true)"
          TEAMS_MSG_SUMMARY: 
          TEAMS_MSG_TYPE: "failure"
            
